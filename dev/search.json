[{"path":"https://mlr3misc.mlr-org.com/dev/LICENSE.html","id":"gnu-lesser-general-public-license","dir":"","previous_headings":"","what":"GNU LESSER GENERAL PUBLIC LICENSE","title":"NA","text":"Version 2.1, February 1999","code":"Copyright (C) 1991, 1999 Free Software Foundation, Inc. 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA  Everyone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed.  [This is the first released version of the Lesser GPL.  It also counts  as the successor of the GNU Library Public License, version 2, hence  the version number 2.1.]"},{"path":"https://mlr3misc.mlr-org.com/dev/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"NA","text":"licenses software designed take away freedom share change . contrast, GNU General Public Licenses intended guarantee freedom share change free software–make sure software free users. license, Lesser General Public License, applies specially designated software packages–typically libraries–Free Software Foundation authors decide use . can use , suggest first think carefully whether license ordinary General Public License better strategy use particular case, based explanations . speak free software, referring freedom use, price. General Public Licenses designed make sure freedom distribute copies free software (charge service wish); receive source code can get want ; can change software use pieces new free programs; informed can things. protect rights, need make restrictions forbid distributors deny rights ask surrender rights. restrictions translate certain responsibilities distribute copies library modify . example, distribute copies library, whether gratis fee, must give recipients rights gave . must make sure , , receive can get source code. link code library, must provide complete object files recipients, can relink library making changes library recompiling . must show terms know rights. protect rights two-step method: (1) copyright library, (2) offer license, gives legal permission copy, distribute /modify library. protect distributor, want make clear warranty free library. Also, library modified someone else passed , recipients know original version, original author’s reputation affected problems might introduced others. Finally, software patents pose constant threat existence free program. wish make sure company effectively restrict users free program obtaining restrictive license patent holder. Therefore, insist patent license obtained version library must consistent full freedom use specified license. GNU software, including libraries, covered ordinary GNU General Public License. license, GNU Lesser General Public License, applies certain designated libraries, quite different ordinary General Public License. use license certain libraries order permit linking libraries non-free programs. program linked library, whether statically using shared library, combination two legally speaking combined work, derivative original library. ordinary General Public License therefore permits linking entire combination fits criteria freedom. Lesser General Public License permits lax criteria linking code library. call license “Lesser” General Public License Less protect user’s freedom ordinary General Public License. also provides free software developers Less advantage competing non-free programs. disadvantages reason use ordinary General Public License many libraries. However, Lesser license provides advantages certain special circumstances. example, rare occasions, may special need encourage widest possible use certain library, becomes de-facto standard. achieve , non-free programs must allowed use library. frequent case free library job widely used non-free libraries. case, little gain limiting free library free software , use Lesser General Public License. cases, permission use particular library non-free programs enables greater number people use large body free software. example, permission use GNU C Library non-free programs enables many people use whole GNU operating system, well variant, GNU/Linux operating system. Although Lesser General Public License Less protective users’ freedom, ensure user program linked Library freedom wherewithal run program using modified version Library. precise terms conditions copying, distribution modification follow. Pay close attention difference “work based library” “work uses library”. former contains code derived library, whereas latter must combined library order run.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/LICENSE.html","id":"terms-and-conditions-for-copying-distribution-and-modification","dir":"","previous_headings":"","what":"TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION","title":"NA","text":"0. License Agreement applies software library program contains notice placed copyright holder authorized party saying may distributed terms Lesser General Public License (also called “License”). licensee addressed “”. “library” means collection software functions /data prepared conveniently linked application programs (use functions data) form executables. “Library”, , refers software library work distributed terms. “work based Library” means either Library derivative work copyright law: say, work containing Library portion , either verbatim modifications /translated straightforwardly another language. (Hereinafter, translation included without limitation term “modification”.) “Source code” work means preferred form work making modifications . library, complete source code means source code modules contains, plus associated interface definition files, plus scripts used control compilation installation library. Activities copying, distribution modification covered License; outside scope. act running program using Library restricted, output program covered contents constitute work based Library (independent use Library tool writing ). Whether true depends Library program uses Library . 1. may copy distribute verbatim copies Library’s complete source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice disclaimer warranty; keep intact notices refer License absence warranty; distribute copy License along Library. may charge fee physical act transferring copy, may option offer warranty protection exchange fee. 2. may modify copy copies Library portion , thus forming work based Library, copy distribute modifications work terms Section 1 , provided also meet conditions: ) modified work must software library. b) must cause files modified carry prominent notices stating changed files date change. c) must cause whole work licensed charge third parties terms License. d) facility modified Library refers function table data supplied application program uses facility, argument passed facility invoked, must make good faith effort ensure , event application supply function table, facility still operates, performs whatever part purpose remains meaningful. (example, function library compute square roots purpose entirely well-defined independent application. Therefore, Subsection 2d requires application-supplied function table used function must optional: application supply , square root function must still compute square roots.) requirements apply modified work whole. identifiable sections work derived Library, can reasonably considered independent separate works , License, terms, apply sections distribute separate works. distribute sections part whole work based Library, distribution whole must terms License, whose permissions licensees extend entire whole, thus every part regardless wrote . Thus, intent section claim rights contest rights work written entirely ; rather, intent exercise right control distribution derivative collective works based Library. addition, mere aggregation another work based Library Library (work based Library) volume storage distribution medium bring work scope License. 3. may opt apply terms ordinary GNU General Public License instead License given copy Library. , must alter notices refer License, refer ordinary GNU General Public License, version 2, instead License. (newer version version 2 ordinary GNU General Public License appeared, can specify version instead wish.) make change notices. change made given copy, irreversible copy, ordinary GNU General Public License applies subsequent copies derivative works made copy. option useful wish copy part code Library program library. 4. may copy distribute Library (portion derivative , Section 2) object code executable form terms Sections 1 2 provided accompany complete corresponding machine-readable source code, must distributed terms Sections 1 2 medium customarily used software interchange. distribution object code made offering access copy designated place, offering equivalent access copy source code place satisfies requirement distribute source code, even though third parties compelled copy source along object code. 5. program contains derivative portion Library, designed work Library compiled linked , called “work uses Library”. work, isolation, derivative work Library, therefore falls outside scope License. However, linking “work uses Library” Library creates executable derivative Library (contains portions Library), rather “work uses library”. executable therefore covered License. Section 6 states terms distribution executables. “work uses Library” uses material header file part Library, object code work may derivative work Library even though source code . Whether true especially significant work can linked without Library, work library. threshold true precisely defined law. object file uses numerical parameters, data structure layouts accessors, small macros small inline functions (ten lines less length), use object file unrestricted, regardless whether legally derivative work. (Executables containing object code plus portions Library still fall Section 6.) Otherwise, work derivative Library, may distribute object code work terms Section 6. executables containing work also fall Section 6, whether linked directly Library . 6. exception Sections , may also combine link “work uses Library” Library produce work containing portions Library, distribute work terms choice, provided terms permit modification work customer’s use reverse engineering debugging modifications. must give prominent notice copy work Library used Library use covered License. must supply copy License. work execution displays copyright notices, must include copyright notice Library among , well reference directing user copy License. Also, must one things: ) Accompany work complete corresponding machine-readable source code Library including whatever changes used work (must distributed Sections 1 2 ); , work executable linked Library, complete machine-readable “work uses Library”, object code /source code, user can modify Library relink produce modified executable containing modified Library. (understood user changes contents definitions files Library necessarily able recompile application use modified definitions.) b) Use suitable shared library mechanism linking Library. suitable mechanism one (1) uses run time copy library already present user’s computer system, rather copying library functions executable, (2) operate properly modified version library, user installs one, long modified version interface-compatible version work made . c) Accompany work written offer, valid least three years, give user materials specified Subsection 6a, , charge cost performing distribution. d) distribution work made offering access copy designated place, offer equivalent access copy specified materials place. e) Verify user already received copy materials already sent user copy. executable, required form “work uses Library” must include data utility programs needed reproducing executable . However, special exception, materials distributed need include anything normally distributed (either source binary form) major components (compiler, kernel, ) operating system executable runs, unless component accompanies executable. may happen requirement contradicts license restrictions proprietary libraries normally accompany operating system. contradiction means use Library together executable distribute. 7. may place library facilities work based Library side--side single library together library facilities covered License, distribute combined library, provided separate distribution work based Library library facilities otherwise permitted, provided two things: ) Accompany combined library copy work based Library, uncombined library facilities. must distributed terms Sections . b) Give prominent notice combined library fact part work based Library, explaining find accompanying uncombined form work. 8. may copy, modify, sublicense, link , distribute Library except expressly provided License. attempt otherwise copy, modify, sublicense, link , distribute Library void, automatically terminate rights License. However, parties received copies, rights, License licenses terminated long parties remain full compliance. 9. required accept License, since signed . However, nothing else grants permission modify distribute Library derivative works. actions prohibited law accept License. Therefore, modifying distributing Library (work based Library), indicate acceptance License , terms conditions copying, distributing modifying Library works based . 10. time redistribute Library (work based Library), recipient automatically receives license original licensor copy, distribute, link modify Library subject terms conditions. may impose restrictions recipients’ exercise rights granted herein. responsible enforcing compliance third parties License. 11. , consequence court judgment allegation patent infringement reason (limited patent issues), conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. distribute satisfy simultaneously obligations License pertinent obligations, consequence may distribute Library . example, patent license permit royalty-free redistribution Library receive copies directly indirectly , way satisfy License refrain entirely distribution Library. portion section held invalid unenforceable particular circumstance, balance section intended apply, section whole intended apply circumstances. purpose section induce infringe patents property right claims contest validity claims; section sole purpose protecting integrity free software distribution system implemented public license practices. Many people made generous contributions wide range software distributed system reliance consistent application system; author/donor decide willing distribute software system licensee impose choice. section intended make thoroughly clear believed consequence rest License. 12. distribution /use Library restricted certain countries either patents copyrighted interfaces, original copyright holder places Library License may add explicit geographical distribution limitation excluding countries, distribution permitted among countries thus excluded. case, License incorporates limitation written body License. 13. Free Software Foundation may publish revised /new versions Lesser General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Library specifies version number License applies “later version”, option following terms conditions either version later version published Free Software Foundation. Library specify license version number, may choose version ever published Free Software Foundation. 14. wish incorporate parts Library free programs whose distribution conditions incompatible , write author ask permission. software copyrighted Free Software Foundation, write Free Software Foundation; sometimes make exceptions . decision guided two goals preserving free status derivatives free software promoting sharing reuse software generally. WARRANTY 15. LIBRARY LICENSED FREE CHARGE, WARRANTY LIBRARY, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE LIBRARY “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE LIBRARY . LIBRARY PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION. 16. EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MAY MODIFY /REDISTRIBUTE LIBRARY PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE LIBRARY (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE LIBRARY OPERATE SOFTWARE), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":[]},{"path":"https://mlr3misc.mlr-org.com/dev/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-libraries","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Libraries","title":"NA","text":"develop new library, want greatest possible use public, recommend making free software everyone can redistribute change. can permitting redistribution terms (, alternatively, terms ordinary General Public License). apply terms, attach following notices library. safest attach start source file effectively convey exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. also get employer (work programmer) school, , sign “copyright disclaimer” library, necessary. sample; alter names: ’s !","code":"one line to give the library's name and an idea of what it does. Copyright (C) year  name of author  This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation; either version 2.1 of the License, or (at your option) any later version.  This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more details.  You should have received a copy of the GNU Lesser General Public License along with this library; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA Yoyodyne, Inc., hereby disclaims all copyright interest in the library `Frob' (a library for tweaking knobs) written by James Random Hacker.  signature of Ty Coon, 1 April 1990 Ty Coon, President of Vice"},{"path":"https://mlr3misc.mlr-org.com/dev/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Michel Lang. Maintainer, author. Patrick Schratz. Author.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Lang M, Schratz P (2022). mlr3misc: Helper Functions 'mlr3'. https://mlr3misc.mlr-org.com, https://github.com/mlr-org/mlr3misc.","code":"@Manual{,   title = {mlr3misc: Helper Functions for 'mlr3'},   author = {Michel Lang and Patrick Schratz},   year = {2022},   note = {https://mlr3misc.mlr-org.com, https://github.com/mlr-org/mlr3misc}, }"},{"path":"https://mlr3misc.mlr-org.com/dev/index.html","id":"mlr3misc","dir":"","previous_headings":"","what":"Helper Functions for mlr3","title":"Helper Functions for mlr3","text":"Package website: release | dev Miscellaneous helper functions mlr3.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/Dictionary.html","id":null,"dir":"Reference","previous_headings":"","what":"Key-Value Storage — Dictionary","title":"Key-Value Storage — Dictionary","text":"key-value store R6::R6 objects. retrieval object, following applies: object R6ClassGenerator, initialized new(). object function, called must return instance R6::R6 object. object instance R6 class, returned -. Default argument required construction can stored alongside constructors passing $add().","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/Dictionary.html","id":"s-methods","dir":"Reference","previous_headings":"","what":"S3 methods","title":"Key-Value Storage — Dictionary","text":".data.table(d) Dictionary -> data.table::data.table() Converts dictionary data.table::data.table().","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/Dictionary.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Key-Value Storage — Dictionary","text":"items (environment()) Stores items dictionary","code":""},{"path":[]},{"path":"https://mlr3misc.mlr-org.com/dev/reference/Dictionary.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Key-Value Storage — Dictionary","text":"Dictionary$new() Dictionary$format() Dictionary$print() Dictionary$keys() Dictionary$() Dictionary$get() Dictionary$mget() Dictionary$add() Dictionary$remove() Dictionary$required_args() Dictionary$clone()","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/Dictionary.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Key-Value Storage — Dictionary","text":"Construct new Dictionary.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/Dictionary.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Key-Value Storage — Dictionary","text":"","code":"Dictionary$new()"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/Dictionary.html","id":"method-format-","dir":"Reference","previous_headings":"","what":"Method format()","title":"Key-Value Storage — Dictionary","text":"Format object simple string.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/Dictionary.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Key-Value Storage — Dictionary","text":"","code":"Dictionary$format()"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/Dictionary.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"Key-Value Storage — Dictionary","text":"Print object.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/Dictionary.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Key-Value Storage — Dictionary","text":"","code":"Dictionary$print()"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/Dictionary.html","id":"method-keys-","dir":"Reference","previous_headings":"","what":"Method keys()","title":"Key-Value Storage — Dictionary","text":"Returns keys comply regular expression pattern. pattern NULL (default), keys returned.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/Dictionary.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Key-Value Storage — Dictionary","text":"","code":"Dictionary$keys(pattern = NULL)"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/Dictionary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Key-Value Storage — Dictionary","text":"pattern (character(1)).","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/Dictionary.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Key-Value Storage — Dictionary","text":"character() keys.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/Dictionary.html","id":"method-has-","dir":"Reference","previous_headings":"","what":"Method has()","title":"Key-Value Storage — Dictionary","text":"Returns logical vector TRUE -th position -th key exists.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/Dictionary.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Key-Value Storage — Dictionary","text":"","code":"Dictionary$has(keys)"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/Dictionary.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Key-Value Storage — Dictionary","text":"keys (character()).","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/Dictionary.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Key-Value Storage — Dictionary","text":"logical().","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/Dictionary.html","id":"method-get-","dir":"Reference","previous_headings":"","what":"Method get()","title":"Key-Value Storage — Dictionary","text":"Retrieves object key key dictionary. Additional arguments must named passed constructor stored object.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/Dictionary.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Key-Value Storage — Dictionary","text":"","code":"Dictionary$get(key, ...)"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/Dictionary.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Key-Value Storage — Dictionary","text":"key (character(1)). ... () Passed constructor.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/Dictionary.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Key-Value Storage — Dictionary","text":"Object corresponding key.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/Dictionary.html","id":"method-mget-","dir":"Reference","previous_headings":"","what":"Method mget()","title":"Key-Value Storage — Dictionary","text":"Returns objects keys keys list named keys. Additional arguments must named passed constructors stored objects.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/Dictionary.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Key-Value Storage — Dictionary","text":"","code":"Dictionary$mget(keys, ...)"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/Dictionary.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Key-Value Storage — Dictionary","text":"keys (character()). ... () Passed constructor.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/Dictionary.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Key-Value Storage — Dictionary","text":"Named list() objects corresponding keys.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/Dictionary.html","id":"method-add-","dir":"Reference","previous_headings":"","what":"Method add()","title":"Key-Value Storage — Dictionary","text":"Adds object value dictionary key key, potentially overwriting previously stored item. Additional arguments ... must named passed default arguments value construction. names additional arguments mandatory construction missing ... listed required_args.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/Dictionary.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Key-Value Storage — Dictionary","text":"","code":"Dictionary$add(key, value, ..., required_args = character())"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/Dictionary.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Key-Value Storage — Dictionary","text":"key (character(1)). value (). ... () Passed constructor. required_args (character()).","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/Dictionary.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"Key-Value Storage — Dictionary","text":"Dictionary.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/Dictionary.html","id":"method-remove-","dir":"Reference","previous_headings":"","what":"Method remove()","title":"Key-Value Storage — Dictionary","text":"Removes objects dictionary.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/Dictionary.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Key-Value Storage — Dictionary","text":"","code":"Dictionary$remove(keys)"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/Dictionary.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Key-Value Storage — Dictionary","text":"keys (character()) Keys objects remove.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/Dictionary.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"Key-Value Storage — Dictionary","text":"Dictionary.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/Dictionary.html","id":"method-required-args-","dir":"Reference","previous_headings":"","what":"Method required_args()","title":"Key-Value Storage — Dictionary","text":"Returns names arguments required construct object.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/Dictionary.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"Key-Value Storage — Dictionary","text":"","code":"Dictionary$required_args(key)"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/Dictionary.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Key-Value Storage — Dictionary","text":"key (character(1)) Key object query required arguments.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/Dictionary.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"Key-Value Storage — Dictionary","text":"character() names required arguments.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/Dictionary.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Key-Value Storage — Dictionary","text":"objects class cloneable method.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/Dictionary.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"Key-Value Storage — Dictionary","text":"","code":"Dictionary$clone(deep = FALSE)"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/Dictionary.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"Key-Value Storage — Dictionary","text":"deep Whether make deep clone.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/Dictionary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Key-Value Storage — Dictionary","text":"","code":"library(R6) item1 = R6Class(\"Item\", public = list(x = 1)) item2 = R6Class(\"Item\", public = list(x = 2)) d = Dictionary$new() d$add(\"a\", item1) d$add(\"b\", item2) d$add(\"c\", item1$new()) d$keys() #> [1] \"a\" \"b\" \"c\" d$get(\"a\") #> <Item> #>   Public: #>     clone: function (deep = FALSE)  #>     x: 1 d$mget(c(\"a\", \"b\")) #> $a #> <Item> #>   Public: #>     clone: function (deep = FALSE)  #>     x: 1 #>  #> $b #> <Item> #>   Public: #>     clone: function (deep = FALSE)  #>     x: 2 #>"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/as_factor.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert to Factor — as_factor","title":"Convert to Factor — as_factor","text":"Converts vector factor() ensures levels order provided levels.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/as_factor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert to Factor — as_factor","text":"","code":"as_factor(x, levels, ordered = is.ordered(x))"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/as_factor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert to Factor — as_factor","text":"x (atomic vector()) Vector convert factor. levels (character()) Levels new factor. ordered (logical(1)) TRUE, create ordered factor.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/as_factor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert to Factor — as_factor","text":"(factor()).","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/as_factor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert to Factor — as_factor","text":"","code":"x = factor(c(\"a\", \"b\")) y = factor(c(\"a\", \"b\"), levels = c(\"b\", \"a\"))  # x with the level order of y as_factor(x, levels(y)) #> [1] a b #> Levels: b a  # y with the level order of x as_factor(y, levels(x)) #> [1] a b #> Levels: a b"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/as_short_string.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert R Object to a Descriptive String — as_short_string","title":"Convert R Object to a Descriptive String — as_short_string","text":"function intended convert R object short descriptive string, e.g. base::print() functions. following rules apply: x atomic() length 0 1: printed -. x atomic() length greater 1, x collapsed \",\", resulting string truncated trunc_width characters. x expression: converted character. Otherwise: class printed. x list, rules applied (non-recursively) elements.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/as_short_string.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert R Object to a Descriptive String — as_short_string","text":"","code":"as_short_string(x, width = 30L, num_format = \"%.4g\")"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/as_short_string.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert R Object to a Descriptive String — as_short_string","text":"x () Arbitrary object. width (integer(1)) Truncate strings width width. num_format (character(1)) Used format numerical scalars via base::sprintf().","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/as_short_string.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert R Object to a Descriptive String — as_short_string","text":"(character(1)).","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/as_short_string.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert R Object to a Descriptive String — as_short_string","text":"","code":"as_short_string(list(a = 1, b = NULL, \"foo\", c = 1:10)) #> [1] \"a=1, b=<NULL>, <unnamed>=foo, c=1,2,3,4,5,6,7,8,9,10\""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/assert_ro_binding.html","id":null,"dir":"Reference","previous_headings":"","what":"Assertion for Active Bindings in R6 Classes — assert_ro_binding","title":"Assertion for Active Bindings in R6 Classes — assert_ro_binding","text":"assertion intended called active bindings R6::R6Class allow assignment. rhs missing, exception raised.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/assert_ro_binding.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assertion for Active Bindings in R6 Classes — assert_ro_binding","text":"","code":"assert_ro_binding(rhs)"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/assert_ro_binding.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assertion for Active Bindings in R6 Classes — assert_ro_binding","text":"rhs () missing, exception raised.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/assert_ro_binding.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assertion for Active Bindings in R6 Classes — assert_ro_binding","text":"Nothing.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/calculate_hash.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate a Hash for Multiple Objects — calculate_hash","title":"Calculate a Hash for Multiple Objects — calculate_hash","text":"Calls digest::digest() calculate hash objects provided. following operations performed make hashing robust: object function(), formals body hashed separately. ensures bytecode parent environment included hash. object data.table::data.table(), data.table converted regular list. ensures keys indices included hash. Note applies top level objects, transformations done recursively.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/calculate_hash.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate a Hash for Multiple Objects — calculate_hash","text":"","code":"calculate_hash(...)"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/calculate_hash.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate a Hash for Multiple Objects — calculate_hash","text":"... () Objects hash.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/calculate_hash.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate a Hash for Multiple Objects — calculate_hash","text":"(character(1)).","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/calculate_hash.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate a Hash for Multiple Objects — calculate_hash","text":"","code":"calculate_hash(iris, 1, \"a\") #> [1] \"9dec48c68dae0533\""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/capitalize.html","id":null,"dir":"Reference","previous_headings":"","what":"Capitalize the First Letter of Strings — capitalize","title":"Capitalize the First Letter of Strings — capitalize","text":"Takes character vector changes first letter element uppercase.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/capitalize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Capitalize the First Letter of Strings — capitalize","text":"","code":"capitalize(str)"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/capitalize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Capitalize the First Letter of Strings — capitalize","text":"str (character()).","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/capitalize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Capitalize the First Letter of Strings — capitalize","text":"Character vector, length str.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/capitalize.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Capitalize the First Letter of Strings — capitalize","text":"","code":"capitalize(\"foo bar\") #> [1] \"Foo bar\""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/check_packages_installed.html","id":null,"dir":"Reference","previous_headings":"","what":"Check that packages are installed, without loading them — check_packages_installed","title":"Check that packages are installed, without loading them — check_packages_installed","text":"Calls find.package() check packages installed.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/check_packages_installed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check that packages are installed, without loading them — check_packages_installed","text":"","code":"check_packages_installed(   pkgs,   warn = TRUE,   msg = \"The following packages are required but not installed: %s\" )"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/check_packages_installed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check that packages are installed, without loading them — check_packages_installed","text":"pkgs (character()) Packages check. warn (logical(1)) TRUE, signals warning class \"packageNotFoundWarning\" missing packages. msg (character(1)) Format warning message. Use \"%s\" placeholder list packages.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/check_packages_installed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check that packages are installed, without loading them — check_packages_installed","text":"(logical()) named package names. TRUE respective package installed, FALSE otherwise.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/check_packages_installed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check that packages are installed, without loading them — check_packages_installed","text":"","code":"check_packages_installed(c(\"mlr3misc\", \"foobar\"), warn = FALSE) #> mlr3misc   foobar  #>     TRUE    FALSE   # catch warning tryCatch(check_packages_installed(c(\"mlr3misc\", \"foobaaar\")),   packageNotFoundWarning = function(w) as.character(w)) #> [1] \"packageNotFoundWarning: The following packages are required but not installed: foobaaar\\n\""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/chunk_vector.html","id":null,"dir":"Reference","previous_headings":"","what":"Chunk Vectors — chunk_vector","title":"Chunk Vectors — chunk_vector","text":"Chunk atomic vectors parts roughly equal size. chunk() takes vector length n returns integer chunk numbers. chunk_vector() uses base::split() chunk() split atomic vector chunks.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/chunk_vector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Chunk Vectors — chunk_vector","text":"","code":"chunk_vector(x, n_chunks = NULL, chunk_size = NULL, shuffle = TRUE)  chunk(n, n_chunks = NULL, chunk_size = NULL, shuffle = TRUE)"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/chunk_vector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Chunk Vectors — chunk_vector","text":"x (vector()) Vector split chunks. n_chunks (integer(1)) Requested number chunks. Mutually exclusive chunk_size props. chunk_size (integer(1)) Requested number elements chunk. Mutually exclusive n_chunks props. shuffle (logical(1)) TRUE, permutes order x chunking. n (integer(1)) Length vector split.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/chunk_vector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Chunk Vectors — chunk_vector","text":"chunk() returns integer() chunk indices, chunk_vector() list() integer vectors.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/chunk_vector.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Chunk Vectors — chunk_vector","text":"","code":"x = 1:11  ch = chunk(length(x), n_chunks = 2) table(ch) #> ch #> 1 2  #> 6 5  split(x, ch) #> $`1` #> [1]  1  2  3  4  8 10 #>  #> $`2` #> [1]  5  6  7  9 11 #>   chunk_vector(x, n_chunks = 2) #> [[1]] #> [1] 1 3 4 7 8 9 #>  #> [[2]] #> [1]  2  5  6 10 11 #>   chunk_vector(x, n_chunks = 3, shuffle = TRUE) #> [[1]] #> [1] 1 2 3 4 #>  #> [[2]] #> [1] 6 7 8 9 #>  #> [[3]] #> [1]  5 10 11 #>"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/compat-map.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply Functions in the spirit of 'purrr' — compat-map","title":"Apply Functions in the spirit of 'purrr' — compat-map","text":"map-like functions, similar ones implemented purrr: map() returns results .f applied .x list. .f function, map call [[ elements .x using value .f index. imap() applies .f value .x (passed first argument) name (passed second argument). .x names, sequence along .x passed second argument instead. pmap() expects .x list vectors equal length, applies .f first element vector .x, second element .x, . map_if() applies .f element .x predicate .p evaluates TRUE. map_at() applies .f element .x referenced .. elements remain unchanged. keep() keeps elements .x predicate .p evaluates TRUE. discard() discards elements .x predicate .p evaluates TRUE. every() TRUE predicate .p evaluates TRUE .x. () TRUE predicate .p evaluates TRUE least one .x. detect() returns first element predicate .p evaluates TRUE. walk(), iwalk() pwalk() counterparts map(), imap() pmap(), just visit (change reference) elements .x. return input .x invisibly. Additionally, functions map(), imap() pmap() type-safe variants following suffixes: *_lgl() returns logical(length(.x)). *_int() returns integer(length(.x)). *_dbl() returns double(length(.x)). *_chr() returns character(length(.x)). *_br() returns object results .f put together base::rbind(). *_bc() returns object results .f put together base::cbind(). *_dtr() returns data.table::data.table() results .f put together base::rbind() fashion. *_dtc() returns data.table::data.table() results .f put together base::cbind() fashion.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/compat-map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply Functions in the spirit of 'purrr' — compat-map","text":"","code":"map(.x, .f, ...)  map_lgl(.x, .f, ...)  map_int(.x, .f, ...)  map_dbl(.x, .f, ...)  map_chr(.x, .f, ...)  map_br(.x, .f, ...)  map_bc(.x, .f, ...)  map_dtr(.x, .f, ..., .fill = FALSE, .idcol = NULL)  map_dtc(.x, .f, ...)  pmap(.x, .f, ...)  pmap_lgl(.x, .f, ...)  pmap_int(.x, .f, ...)  pmap_dbl(.x, .f, ...)  pmap_chr(.x, .f, ...)  pmap_dtr(.x, .f, ..., .fill = FALSE, .idcol = NULL)  pmap_dtc(.x, .f, ...)  imap(.x, .f, ...)  imap_lgl(.x, .f, ...)  imap_int(.x, .f, ...)  imap_dbl(.x, .f, ...)  imap_chr(.x, .f, ...)  imap_dtr(.x, .f, ..., .fill = FALSE, .idcol = NULL)  imap_dtc(.x, .f, ...)  keep(.x, .f, ...)  discard(.x, .p, ...)  map_if(.x, .p, .f, ...)  # S3 method for default map_if(.x, .p, .f, ...)  map_at(.x, .at, .f, ...)  every(.x, .p, ...)  some(.x, .p, ...)  detect(.x, .p, ...)  walk(.x, .f, ...)  iwalk(.x, .f, ...)  pwalk(.x, .f, ...)"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/compat-map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply Functions in the spirit of 'purrr' — compat-map","text":".x (list() | atomic vector()). .f (function() | character() | integer()) Function apply, element extract name (.f character()) position (.f integer()). ... () Additional arguments passed .f .p. .fill (logical(1)) Passed data.table::rbindlist(). .idcol (logical(1)) Passed data.table::rbindlist(). .p (function() | logical()) Predicate function. .(character() | integer() | logical()) Index vector.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/compose.html","id":null,"dir":"Reference","previous_headings":"","what":"Composition of Functions — compose","title":"Composition of Functions — compose","text":"Composes two functions single function. returned function calls provided functions reverse order: return value last function servers input next last function, .","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/compose.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Composition of Functions — compose","text":"","code":"compose(...)"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/compose.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Composition of Functions — compose","text":"... (functions) Functions compose.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/compose.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Composition of Functions — compose","text":"(function()) calls functions provided via ...reverse order.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/compose.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Composition of Functions — compose","text":"","code":"f = compose(function(x) x + 1, function(x) x / 2) f(10) #> [1] 6"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/compute_mode.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute The Mode — compute_mode","title":"Compute The Mode — compute_mode","text":"Computes mode (frequent value) atomic vector.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/compute_mode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute The Mode — compute_mode","text":"","code":"compute_mode(x, ties_method = \"random\", na_rm = TRUE)"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/compute_mode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute The Mode — compute_mode","text":"x (vector()). ties_method (character(1)) Handling ties. One \"first\", \"last\" \"random\" return first tied value, last tied value, randomly selected tied value, respectively. na_rm (logical(1)) TRUE, remove missing values prior computing mode.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/compute_mode.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute The Mode — compute_mode","text":"(vector(1)): mode value.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/compute_mode.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute The Mode — compute_mode","text":"","code":"compute_mode(c(1, 1, 1, 2, 2, 2, 3)) #> [1] 2 compute_mode(c(1, 1, 1, 2, 2, 2, 3), ties_method = \"last\") #> [1] 2 compute_mode(c(1, 1, 1, 2, 2, 2, 3), ties_method = \"random\") #> [1] 2"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/count_missing.html","id":null,"dir":"Reference","previous_headings":"","what":"Count Missing Values in a Vector\n\nSame as sum(is.na(x)), but without the allocation. — count_missing","title":"Count Missing Values in a Vector\n\nSame as sum(is.na(x)), but without the allocation. — count_missing","text":"Count Missing Values Vector sum(.na(x)), without allocation.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/count_missing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count Missing Values in a Vector\n\nSame as sum(is.na(x)), but without the allocation. — count_missing","text":"","code":"count_missing(x)"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/count_missing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count Missing Values in a Vector\n\nSame as sum(is.na(x)), but without the allocation. — count_missing","text":"x vector() Supported logical, integer, double, complex string vectors.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/count_missing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count Missing Values in a Vector\n\nSame as sum(is.na(x)), but without the allocation. — count_missing","text":"(integer(1)) number missing values.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/count_missing.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Count Missing Values in a Vector\n\nSame as sum(is.na(x)), but without the allocation. — count_missing","text":"","code":"count_missing(c(1, 2, NA, 4, NA)) #> [1] 2"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/crate.html","id":null,"dir":"Reference","previous_headings":"","what":"Isolate a Function from its Environment — crate","title":"Isolate a Function from its Environment — crate","text":"Put function \"lean\" environment carry unnecessary baggage (e.g. references datasets).","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/crate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Isolate a Function from its Environment — crate","text":"","code":"crate(.fn, ..., .parent = .GlobalEnv)"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/crate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Isolate a Function from its Environment — crate","text":".fn (function()) function crate ... () objects, visible inside .fn. .parent (environment) Parent environment look names. Default global environment.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/crate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Isolate a Function from its Environment — crate","text":"","code":"meta_f = function(z) {   x = 1   y = 2   crate(function() {     c(x, y, z)   }, x) } x = 100 y = 200 z = 300 f = meta_f(1) f() #> Error in f(): object 'y' not found"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/cross_join.html","id":null,"dir":"Reference","previous_headings":"","what":"Cross-Join for data.table — cross_join","title":"Cross-Join for data.table — cross_join","text":"safe version data.table::CJ() case column called sorted unique.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/cross_join.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cross-Join for data.table — cross_join","text":"","code":"cross_join(dots, sorted = TRUE, unique = FALSE)"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/cross_join.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cross-Join for data.table — cross_join","text":"dots (named list()) Vectors cross-join. sorted (logical(1)) See data.table::CJ(). unique (logical(1)) See data.table::CJ().","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/cross_join.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cross-Join for data.table — cross_join","text":"data.table().","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/cross_join.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cross-Join for data.table — cross_join","text":"","code":"cross_join(dots = list(sorted = 1:3, b = letters[1:2])) #>    sorted b #> 1:      1 a #> 2:      1 b #> 3:      2 a #> 4:      2 b #> 5:      3 a #> 6:      3 b"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/dictionary_sugar_get.html","id":null,"dir":"Reference","previous_headings":"","what":"A Quick Way to Initialize Objects from Dictionaries — dictionary_sugar_get","title":"A Quick Way to Initialize Objects from Dictionaries — dictionary_sugar_get","text":"Given Dictionary, retrieve objects provided keys. dictionary_sugar_get() retrieve single object key .key. dictionary_sugar_mget() retrieve list objects keys .keys. dictionary_sugar() deprecated favor dictionary_sugar_get(). .key .keys missing, dictionary returned. Arguments ... must named consumed following order: arguments whose names match name argument constructor passed $get() method Dictionary construction. arguments whose names match name parameter paradox::ParamSet constructed object set parameters. paradox::ParamSet obj$param_set, step skipped. remaining arguments assumed regular fields constructed R6 instance, assigned via <-.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/dictionary_sugar_get.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A Quick Way to Initialize Objects from Dictionaries — dictionary_sugar_get","text":"","code":"dictionary_sugar_get(dict, .key, ...)  dictionary_sugar(dict, .key, ...)  dictionary_sugar_mget(dict, .keys, ...)"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/dictionary_sugar_get.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A Quick Way to Initialize Objects from Dictionaries — dictionary_sugar_get","text":"dict (Dictionary). .key (character(1)) Key object construct. ... () See description. .keys (character()) Keys objects construct.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/dictionary_sugar_get.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A Quick Way to Initialize Objects from Dictionaries — dictionary_sugar_get","text":"R6::R6Class()","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/dictionary_sugar_get.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A Quick Way to Initialize Objects from Dictionaries — dictionary_sugar_get","text":"","code":"library(R6) item = R6Class(\"Item\", public = list(x = 0)) d = Dictionary$new() d$add(\"key\", item) dictionary_sugar_get(d, \"key\", x = 2) #> <Item> #>   Public: #>     clone: function (deep = FALSE)  #>     x: 2"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/did_you_mean.html","id":null,"dir":"Reference","previous_headings":"","what":"Suggest Alternatives — did_you_mean","title":"Suggest Alternatives — did_you_mean","text":"Helps suggest alternatives list strings, based string similarity utils::adist().","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/did_you_mean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Suggest Alternatives — did_you_mean","text":"","code":"did_you_mean(str, candidates)"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/did_you_mean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Suggest Alternatives — did_you_mean","text":"str (character(1)) String. candidates (character()) Candidate strings.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/did_you_mean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Suggest Alternatives — did_you_mean","text":"(character(1)). Either phrase suggesting one candidates candidates, empty string close match found.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/did_you_mean.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Suggest Alternatives — did_you_mean","text":"","code":"did_you_mean(\"yep\", c(\"yes\", \"no\")) #> [1] \" Did you mean 'yes'?\""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/distinct_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Distinct Values — distinct_values","title":"Get Distinct Values — distinct_values","text":"Extracts distinct values atomic vector, possibility drop levels remove missing values.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/distinct_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Distinct Values — distinct_values","text":"","code":"distinct_values(x, drop = TRUE, na_rm = TRUE)"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/distinct_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Distinct Values — distinct_values","text":"x (atomic vector()). drop :: logical(1) TRUE, returns values present x. FALSE, returns levels factor() ordered(), well TRUE FALSE logical()s. na_rm :: logical(1) TRUE, missing values removed vector distinct values.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/distinct_values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Distinct Values — distinct_values","text":"(atomic vector()) distinct values particular order.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/distinct_values.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Distinct Values — distinct_values","text":"","code":"# for factors: x = factor(c(letters[1:2], NA), levels = letters[1:3]) distinct_values(x) #> [1] \"a\" \"b\" distinct_values(x, na_rm = FALSE) #> [1] \"a\" \"b\" NA  distinct_values(x, drop = FALSE) #> [1] \"a\" \"b\" \"c\" distinct_values(x, drop = FALSE, na_rm = FALSE) #> [1] \"a\" \"b\" \"c\" NA   # for logicals: distinct_values(TRUE, drop = FALSE) #> [1]  TRUE FALSE  # for numerics: distinct_values(sample(1:3, 10, replace = TRUE)) #> [1] 1 2 3"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/encapsulate.html","id":null,"dir":"Reference","previous_headings":"","what":"Encapsulate Function Calls for Logging — encapsulate","title":"Encapsulate Function Calls for Logging — encapsulate","text":"Evaluates function recording output log measuring elapsed time. currently three different modes implemented encapsulate function call: \"none\": Just runs call current session measures elapsed time. keep log, output printed directly console. Works well together traceback(). \"evaluate\": Uses package evaluate call function, measure time logging. \"callr\": Uses package callr call function, measure time logging. encapsulation spawns separate R session function called. comes considerable overhead, also guards session teared segfaults.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/encapsulate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Encapsulate Function Calls for Logging — encapsulate","text":"","code":"encapsulate(   method,   .f,   .args = list(),   .opts = list(),   .pkgs = character(),   .seed = NA_integer_,   .timeout = Inf )"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/encapsulate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Encapsulate Function Calls for Logging — encapsulate","text":"method (character(1)) One \"none\", \"evaluate\" \"callr\". .f (function()) Function call. .args (list()) Arguments passed .f. .opts (named list()) Options set function call. Options get reset exit. .pkgs (character()) Packages load (attach). .seed (integer(1)) Random seed set invoking function call. Gets reset previous seed exit. .timeout (numeric(1)) Timeout seconds. Uses setTimeLimit() \"none\" \"evaluate\" encapsulation. \"callr\" encapsulation, timeout passed callr::r().","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/encapsulate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Encapsulate Function Calls for Logging — encapsulate","text":"(named list()) three fields: \"result\": return value .f \"elapsed\": elapsed time seconds. Measured proc.time() difference /function call. \"log\": data.table() columns \"class\" (ordered factor levels \"output\", \"warning\" \"error\") \"message\" (character()).","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/encapsulate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Encapsulate Function Calls for Logging — encapsulate","text":"","code":"f = function(n) {   message(\"hi from f\")   if (n > 5) {     stop(\"n must be <= 5\")   }   runif(n) }  encapsulate(\"none\", f, list(n = 1), .seed = 1) #> hi from f #> $result #> [1] 0.2655087 #>  #> $log #> Empty data.table (0 rows and 2 cols): class,msg #>  #> $elapsed #> [1] 0.001 #>   if (requireNamespace(\"evaluate\", quietly = TRUE)) {   encapsulate(\"evaluate\", f, list(n = 1), .seed = 1) } #> $result #> [1] 0.01901968 #>  #> $log #>     class       msg #> 1: output hi from f #>  #> $elapsed #> [1] 0.002 #>   if (requireNamespace(\"callr\", quietly = TRUE)) {   encapsulate(\"callr\", f, list(n = 1), .seed = 1) } #> $result #> [1] 0.2655087 #>  #> $log #>     class       msg #> 1: output hi from f #>  #> $elapsed #> elapsed  #>   0.199  #>"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/enframe.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a Named Vector into a data.table and Vice Versa — enframe","title":"Convert a Named Vector into a data.table and Vice Versa — enframe","text":"enframe() returns data.table::data.table() two columns: names x (seq_along(x) unnamed) values x. deframe() converts two-column data.frame named vector. data.frame single column, unnamed vector returned.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/enframe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a Named Vector into a data.table and Vice Versa — enframe","text":"","code":"enframe(x, name = \"name\", value = \"value\")  deframe(x)"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/enframe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a Named Vector into a data.table and Vice Versa — enframe","text":"x (vector() (enframe()) data.frame() (deframe())) Vector convert data.table::data.table(). name (character(1)) Name first column names. value (character(1)) Name second column values.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/enframe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a Named Vector into a data.table and Vice Versa — enframe","text":"data.table::data.table() named vector.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/enframe.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a Named Vector into a data.table and Vice Versa — enframe","text":"","code":"x = 1:3 enframe(x) #>    name value #> 1:    1     1 #> 2:    2     2 #> 3:    3     3  x = set_names(1:3, letters[1:3]) enframe(x, value = \"x_values\") #>    name x_values #> 1:    a        1 #> 2:    b        2 #> 3:    c        3"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/extract_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Variables from a Formula — extract_vars","title":"Extract Variables from a Formula — extract_vars","text":"Given formula() f, returns variables used left-hand side right-hand side formula.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/extract_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Variables from a Formula — extract_vars","text":"","code":"extract_vars(f)"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/extract_vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Variables from a Formula — extract_vars","text":"f (formula()).","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/extract_vars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Variables from a Formula — extract_vars","text":"(list()) elements \"lhs\" \"rhs\", character().","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/extract_vars.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Variables from a Formula — extract_vars","text":"","code":"extract_vars(Species ~ Sepal.Width + Sepal.Length) #> $lhs #> [1] \"Species\" #>  #> $rhs #> [1] \"Sepal.Width\"  \"Sepal.Length\" #>  extract_vars(Species ~ .) #> $lhs #> [1] \"Species\" #>  #> $rhs #> [1] \".\" #>"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/format_bib.html","id":null,"dir":"Reference","previous_headings":"","what":"Format Bibentries in Roxygen — format_bib","title":"Format Bibentries in Roxygen — format_bib","text":"Operates named list bibentry() entries formats nicely documentation roxygen2. format_bib() intended called @references section prints complete entry using toRd(). cite_bib() returns family name first author (available, falling back complete author name applicable) year format \"[LastName] (YYYY)\".","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/format_bib.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format Bibentries in Roxygen — format_bib","text":"","code":"format_bib(..., bibentries = NULL, envir = parent.frame())  cite_bib(..., bibentries = NULL, envir = parent.frame())"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/format_bib.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format Bibentries in Roxygen — format_bib","text":"... (character()) One names bibentries. bibentries (named list()) Named list bibentries. envir (environment) Environment lookup bibentries provided.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/format_bib.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format Bibentries in Roxygen — format_bib","text":"(character(1)).","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/format_bib.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format Bibentries in Roxygen — format_bib","text":"","code":"bibentries = list(checkmate = citation(\"checkmate\"), R = citation()) format_bib(\"checkmate\") #> [1] \"Lang M (2017).\\n\\\\dQuote{checkmate: Fast Argument Checks for Defensive R Programming.}\\n\\\\emph{The R Journal}, \\\\bold{9}(1), 437--445.\\n\\\\doi{10.32614/RJ-2017-028}.\" format_bib(\"R\") #> [1] \"R Core Team (2022).\\n\\\\emph{R: A Language and Environment for Statistical Computing}.\\nR Foundation for Statistical Computing, Vienna, Austria.\\n\\\\url{https://www.R-project.org/}.\" cite_bib(\"checkmate\") #> [1] \"Lang (2017)\" cite_bib(\"checkmate\", \"R\") #> [1] \"Lang (2017) and R Core Team (2022)\""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/formulate.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Formulas — formulate","title":"Create Formulas — formulate","text":"Given left-hand side right-hand side character vectors, generates new stats::formula().","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/formulate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Formulas — formulate","text":"","code":"formulate(lhs = character(), rhs = character(), env = NULL, quote = \"right\")"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/formulate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Formulas — formulate","text":"lhs (character()) Left-hand side formula. Multiple elements collapsed \" + \". rhs (character()) Right-hand side formula. Multiple elements collapsed \" + \". env (environment()) Environment new formula. Defaults NULL. quote (character(1)) side formula quote? Subset (\"left\", \"right\"), defaulting \"right\".","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/formulate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Formulas — formulate","text":"stats::formula().","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/formulate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Formulas — formulate","text":"","code":"formulate(\"Species\", c(\"Sepal.Length\", \"Sepal.Width\")) #> Species ~ Sepal.Length + Sepal.Width #> NULL formulate(rhs = c(\"Sepal.Length\", \"Sepal.Width\")) #> ~Sepal.Length + Sepal.Width #> NULL"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/get_private-set.html","id":null,"dir":"Reference","previous_headings":"","what":"Assign Value to Private Field — get_private<-","title":"Assign Value to Private Field — get_private<-","text":"Convenience function assign value private field R6 instance.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/get_private-set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assign Value to Private Field — get_private<-","text":"","code":"get_private(x, which) <- value"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/get_private-set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assign Value to Private Field — get_private<-","text":"x () Object whose private field modified. (character(1)) Private field modified. value () Value assign private field.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/get_private-set.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assign Value to Private Field — get_private<-","text":"R6 instance x, modified -place. R6 instance, NULL returned.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/get_private-set.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assign Value to Private Field — get_private<-","text":"","code":"library(R6) item = R6Class(\"Item\", private = list(x = 1))$new() get_private(item)$x #> [1] 1 get_private(item, \"x\") = 2L get_private(item)$x #> [1] 2"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/get_private.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Private Fields of R6 Objects — get_private","title":"Extract Private Fields of R6 Objects — get_private","text":"Provides access private members R6::R6Class objects.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/get_private.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Private Fields of R6 Objects — get_private","text":"","code":"get_private(x)"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/get_private.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Private Fields of R6 Objects — get_private","text":"x () Object extract private members .","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/get_private.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Private Fields of R6 Objects — get_private","text":"environment() private members, NULL x R6 object.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/get_private.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Private Fields of R6 Objects — get_private","text":"","code":"library(R6) item = R6Class(\"Item\", private = list(x = 1))$new() get_private(item)$x #> [1] 1"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/get_seed.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the Random Seed — get_seed","title":"Get the Random Seed — get_seed","text":"Retrieves current random seed (.Random.seed global environment), initializes RNG first, necessary.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/get_seed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the Random Seed — get_seed","text":"","code":"get_seed()"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/get_seed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the Random Seed — get_seed","text":"integer(). Depends base::RNGkind().","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/get_seed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the Random Seed — get_seed","text":"","code":"str(get_seed()) #>  int [1:626] 10403 79 1296807214 170534105 683769579 1869282138 -2095284964 1999944735 -2053808011 610065676 ..."},{"path":"https://mlr3misc.mlr-org.com/dev/reference/has_element.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if an Object is Element of a List — has_element","title":"Check if an Object is Element of a List — has_element","text":"Simply checks list contains given object. NB1: Objects compared identity. NB2: use lists complex objects, simpler structures faster operations. NB3: Clones R6 objects detected.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/has_element.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if an Object is Element of a List — has_element","text":"","code":"has_element(.x, .y)"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/has_element.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if an Object is Element of a List — has_element","text":".x (list() | atomic vector()). .y () Object test .","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/has_element.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if an Object is Element of a List — has_element","text":"","code":"has_element(list(1, 2, 3), 1) #> [1] TRUE"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/ids.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract ids from a List of Objects — ids","title":"Extract ids from a List of Objects — ids","text":"None.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/ids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract ids from a List of Objects — ids","text":"","code":"ids(xs)"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/ids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract ids from a List of Objects — ids","text":"xs (list()) Every element must slot 'id'.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/ids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract ids from a List of Objects — ids","text":"(character()).","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/ids.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract ids from a List of Objects — ids","text":"","code":"xs = list(a = list(id = \"foo\", a = 1), bar = list(id = \"bar\", a = 2)) ids(xs) #> [1] \"foo\" \"bar\""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/insert_named.html","id":null,"dir":"Reference","previous_headings":"","what":"Insert or Remove Named Elements — insert_named","title":"Insert or Remove Named Elements — insert_named","text":"Insert elements y x name, remove elements x name. Works vectors, lists, environments data frames data tables. Objects reference semantic (environment() data.table::data.table()) might modified -place.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/insert_named.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Insert or Remove Named Elements — insert_named","text":"","code":"insert_named(x, y)  # S3 method for `NULL` insert_named(x, y)  # S3 method for default insert_named(x, y)  # S3 method for environment insert_named(x, y)  # S3 method for data.frame insert_named(x, y)  # S3 method for data.table insert_named(x, y)  remove_named(x, nn)  # S3 method for environment remove_named(x, nn)  # S3 method for data.frame remove_named(x, nn)  # S3 method for data.table remove_named(x, nn)"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/insert_named.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Insert or Remove Named Elements — insert_named","text":"x (vector() | list() | environment() | data.table::data.table()) Object insert elements , remove elements . Changes -reference environments data tables. y (list()) List elements insert x. nn (character()) Character vector elements remove.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/insert_named.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Insert or Remove Named Elements — insert_named","text":"Modified object.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/insert_named.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Insert or Remove Named Elements — insert_named","text":"","code":"x = list(a = 1, b = 2) insert_named(x, list(b = 3, c = 4)) #> $a #> [1] 1 #>  #> $b #> [1] 3 #>  #> $c #> [1] 4 #>  remove_named(x, \"b\") #> $a #> [1] 1 #>"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/invoke.html","id":null,"dir":"Reference","previous_headings":"","what":"Invoke a Function Call — invoke","title":"Invoke a Function Call — invoke","text":"alternative interface .call(), similar deprecated function purrr. function tries hard evaluate passed arguments eagerly important working large R objects. recommended pass arguments named order rely positional argument matching.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/invoke.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Invoke a Function Call — invoke","text":"","code":"invoke(   .f,   ...,   .args = list(),   .opts = list(),   .seed = NA_integer_,   .timeout = Inf )"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/invoke.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Invoke a Function Call — invoke","text":".f (function()) Function call. ... () Additional function arguments passed .f. .args (list()) Additional function arguments passed .f, (named) list(). arguments concatenated arguments provided via .... .opts (named list()) List options set .f called. Options reset previous state afterwards. .seed (integer(1)) Random seed set invoking function call. Gets reset previous seed exit. .timeout (numeric(1)) Timeout seconds. Uses setTimeLimit(). Note timeouts triggered user interrupt, compiled code.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/invoke.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Invoke a Function Call — invoke","text":"","code":"invoke(mean, .args = list(x = 1:10)) #> [1] 5.5 invoke(mean, na.rm = TRUE, .args = list(1:10)) #> [1] 5.5"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/is_scalar_na.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for a Single Scalar Value — is_scalar_na","title":"Check for a Single Scalar Value — is_scalar_na","text":"Check Single Scalar Value","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/is_scalar_na.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for a Single Scalar Value — is_scalar_na","text":"","code":"is_scalar_na(x)"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/is_scalar_na.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for a Single Scalar Value — is_scalar_na","text":"x () Argument check.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/is_scalar_na.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for a Single Scalar Value — is_scalar_na","text":"(logical(1)).","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/keep_in_bounds.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove All Elements Out Of Bounds — keep_in_bounds","title":"Remove All Elements Out Of Bounds — keep_in_bounds","text":"Filters vector x keep elements bounds [lower, upper]. equivalent following, tries avoid unnecessary allocations: Currently works integer x.","code":"x[!is.na(x) & x >= lower & x <= upper]"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/keep_in_bounds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove All Elements Out Of Bounds — keep_in_bounds","text":"","code":"keep_in_bounds(x, lower, upper)"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/keep_in_bounds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove All Elements Out Of Bounds — keep_in_bounds","text":"x (integer()) Vector filter. lower (integer(1)) Lower bound. upper (integer(1)) Upper bound.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/keep_in_bounds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove All Elements Out Of Bounds — keep_in_bounds","text":"(integer()) values [lower, upper].","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/keep_in_bounds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove All Elements Out Of Bounds — keep_in_bounds","text":"","code":"keep_in_bounds(sample(20), 5, 10) #> [1]  5  6  7  8  9 10"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/leanify_r6.html","id":null,"dir":"Reference","previous_headings":"","what":"Move all methods of an R6 Class to an environment — leanify_r6","title":"Move all methods of an R6 Class to an environment — leanify_r6","text":"leanify_r6 moves content R6::R6Class's functions environment, usually package's namespace, save space serialization R6 objects. leanify_package move methods R6 Classes environment. function class (.e. object generator) replaced stump function nothing except calling original function now resides somewhere else. possible call function definition R6::R6 class inside package, preferred use leanify_package() just leanify R6::R6 classes inside package.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/leanify_r6.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Move all methods of an R6 Class to an environment — leanify_r6","text":"","code":"leanify_r6(cls, env = cls$parent_env)  leanify_package(pkg_env = parent.frame(), skip_if = function(x) FALSE)"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/leanify_r6.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Move all methods of an R6 Class to an environment — leanify_r6","text":"cls (R6::R6Class) Class generator modify. env (environment) target environment function stored. either cls$parent_env (default) one parent environments, otherwise stump function find moved (original code) function. pkg_env :: environment namespace leanify R6 classes. package namespace, intended usecase. skip_if :: function Function one argument: called individual R6::R6Class. returns TRUE, class skipped. Default function evaluating FALSE always (.e. skipping classes).","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/leanify_r6.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Move all methods of an R6 Class to an environment — leanify_r6","text":"NULL.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/load_dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve a Single Data Set — load_dataset","title":"Retrieve a Single Data Set — load_dataset","text":"Loads data set name id package package returns . package installed, error condition \"packageNotFoundError\" raised. name missing packages stored condition packages.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/load_dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve a Single Data Set — load_dataset","text":"","code":"load_dataset(id, package, keep_rownames = FALSE)"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/load_dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve a Single Data Set — load_dataset","text":"id (character(1)) Name data set. package (character(1)) Package load data set . keep_rownames (logical(1)) Keep possible row names (default: FALSE).","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/load_dataset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve a Single Data Set — load_dataset","text":"","code":"head(load_dataset(\"iris\", \"datasets\")) #>   Sepal.Length Sepal.Width Petal.Length Petal.Width Species #> 1          5.1         3.5          1.4         0.2  setosa #> 2          4.9         3.0          1.4         0.2  setosa #> 3          4.7         3.2          1.3         0.2  setosa #> 4          4.6         3.1          1.5         0.2  setosa #> 5          5.0         3.6          1.4         0.2  setosa #> 6          5.4         3.9          1.7         0.4  setosa"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/map_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace Elements of Vectors with New Values — map_values","title":"Replace Elements of Vectors with New Values — map_values","text":"Replaces values x match old values new. Values matched base::match().","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/map_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace Elements of Vectors with New Values — map_values","text":"","code":"map_values(x, old, new)"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/map_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace Elements of Vectors with New Values — map_values","text":"x (vector()). old (vector()) Vector values replace. new (vector()) Values replace . forced length old base::rep_len().","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/map_values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replace Elements of Vectors with New Values — map_values","text":"(vector()) length x.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/map_values.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Replace Elements of Vectors with New Values — map_values","text":"","code":"x = letters[1:5]  # replace all \"b\" with \"_b_\", and all \"c\" with \"_c_\" old = c(\"b\", \"c\") new = c(\"_b_\", \"_c_\") map_values(x, old, new) #> [1] \"a\"   \"_b_\" \"_c_\" \"d\"   \"e\""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/mlr3misc-package.html","id":null,"dir":"Reference","previous_headings":"","what":"mlr3misc: Helper Functions for 'mlr3' — mlr3misc-package","title":"mlr3misc: Helper Functions for 'mlr3' — mlr3misc-package","text":"Frequently used helper functions assertions used 'mlr3' companion packages. Comes helper functions functional programming, printing, work 'data.table', well generally useful 'R6' classes. package also supersedes package 'BBmisc'.","code":""},{"path":[]},{"path":"https://mlr3misc.mlr-org.com/dev/reference/mlr3misc-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"mlr3misc: Helper Functions for 'mlr3' — mlr3misc-package","text":"Maintainer: Michel Lang michellang@gmail.com (ORCID) Authors: Patrick Schratz patrick.schratz@gmail.com (ORCID)","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/modify_if.html","id":null,"dir":"Reference","previous_headings":"","what":"Selectively Modify Elements of a Vector — modify_if","title":"Selectively Modify Elements of a Vector — modify_if","text":"Modifies elements vector selectively, similar functions purrr. modify_if() applies predicate function .p elements .x applies .f elements .x .p evaluates TRUE. modify_at() applies .f elements .x selected via ..","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/modify_if.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Selectively Modify Elements of a Vector — modify_if","text":"","code":"modify_if(.x, .p, .f, ...)  modify_at(.x, .at, .f, ...)"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/modify_if.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Selectively Modify Elements of a Vector — modify_if","text":".x (vector()). .p (function()) Predicate function. .f (function()) Function apply .x. ... () Additional arguments passed .f. .((integer() | character())) Index vector select elements .x.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/modify_if.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Selectively Modify Elements of a Vector — modify_if","text":"","code":"x = modify_if(iris, is.factor, as.character) str(x) #> 'data.frame':\t150 obs. of  5 variables: #>  $ Sepal.Length: num  5.1 4.9 4.7 4.6 5 5.4 4.6 5 4.4 4.9 ... #>  $ Sepal.Width : num  3.5 3 3.2 3.1 3.6 3.9 3.4 3.4 2.9 3.1 ... #>  $ Petal.Length: num  1.4 1.4 1.3 1.5 1.4 1.7 1.4 1.5 1.4 1.5 ... #>  $ Petal.Width : num  0.2 0.2 0.2 0.2 0.2 0.4 0.3 0.2 0.2 0.1 ... #>  $ Species     : chr  \"setosa\" \"setosa\" \"setosa\" \"setosa\" ...  x = modify_at(iris, 5, as.character) x = modify_at(iris, \"Sepal.Length\", sqrt) str(x) #> 'data.frame':\t150 obs. of  5 variables: #>  $ Sepal.Length: num  2.26 2.21 2.17 2.14 2.24 ... #>  $ Sepal.Width : num  3.5 3 3.2 3.1 3.6 3.9 3.4 3.4 2.9 3.1 ... #>  $ Petal.Length: num  1.4 1.4 1.3 1.5 1.4 1.7 1.4 1.5 1.4 1.5 ... #>  $ Petal.Width : num  0.2 0.2 0.2 0.2 0.2 0.4 0.3 0.2 0.2 0.1 ... #>  $ Species     : Factor w/ 3 levels \"setosa\",\"versicolor\",..: 1 1 1 1 1 1 1 1 1 1 ..."},{"path":"https://mlr3misc.mlr-org.com/dev/reference/named_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Named List — named_list","title":"Create a Named List — named_list","text":"Create Named List","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/named_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Named List — named_list","text":"","code":"named_list(nn = character(0L), init = NULL)"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/named_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Named List — named_list","text":"nn (character()) Names new list. init () list elements initialized value.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/named_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Named List — named_list","text":"(named list()).","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/named_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Named List — named_list","text":"","code":"named_list(c(\"a\", \"b\")) #> $a #> NULL #>  #> $b #> NULL #>  named_list(c(\"a\", \"b\"), init = 1) #> $a #> [1] 1 #>  #> $b #> [1] 1 #>"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/named_vector.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Named Vector — named_vector","title":"Create a Named Vector — named_vector","text":"Creates simple atomic vector init values.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/named_vector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Named Vector — named_vector","text":"","code":"named_vector(nn = character(0L), init = NA)"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/named_vector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Named Vector — named_vector","text":"nn (character()) Names new vector init (atomic) vector elements initialized value.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/named_vector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Named Vector — named_vector","text":"(named vector()).","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/named_vector.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Named Vector — named_vector","text":"","code":"named_vector(c(\"a\", \"b\"), NA) #>  a  b  #> NA NA  named_vector(character()) #> named logical(0)"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/names2.html","id":null,"dir":"Reference","previous_headings":"","what":"A Type-Stable names() Replacement — names2","title":"A Type-Stable names() Replacement — names2","text":"simple wrapper around base::names(). Returns character vector even names attribute set. Values NA \"\" treated missing replaced value provided missing_val.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/names2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A Type-Stable names() Replacement — names2","text":"","code":"names2(x, missing_val = NA_character_)"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/names2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A Type-Stable names() Replacement — names2","text":"x () Object. missing_val (atomic(1)) Value set missing names. Default NA_character_.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/names2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A Type-Stable names() Replacement — names2","text":"(character(length(x))).","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/names2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A Type-Stable names() Replacement — names2","text":"","code":"x = 1:3 names(x) #> NULL names2(x) #> [1] NA NA NA  names(x)[1:2] = letters[1:2] names(x) #> [1] \"a\" \"b\" NA  names2(x, missing_val = \"\") #> [1] \"a\" \"b\" \"\""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/nin.html","id":null,"dir":"Reference","previous_headings":"","what":"Negated in-operator — %nin%","title":"Negated in-operator — %nin%","text":"operator equivalent !(x %% y).","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/nin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Negated in-operator — %nin%","text":"","code":"x %nin% y"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/nin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Negated in-operator — %nin%","text":"x (vector()) Values y. y (vector()) Values match .","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/open_help.html","id":null,"dir":"Reference","previous_headings":"","what":"Opens a Manual Page — open_help","title":"Opens a Manual Page — open_help","text":"Simply opens manual page specified \"package::topic\" syntax.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/open_help.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Opens a Manual Page — open_help","text":"","code":"open_help(man)"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/open_help.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Opens a Manual Page — open_help","text":"man (character(1)) Manual page open \"package::topic\" syntax.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/open_help.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Opens a Manual Page — open_help","text":"Nothing.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/printf.html","id":null,"dir":"Reference","previous_headings":"","what":"Functions for Formatted Output and Conditions — printf","title":"Functions for Formatted Output and Conditions — printf","text":"catf(), messagef(), warningf() stopf() wrappers around base::cat(), base::message(), base::warning() base::stop(), respectively. call included warnings errors.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/printf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Functions for Formatted Output and Conditions — printf","text":"","code":"catf(msg, ..., file = \"\", wrap = FALSE)  messagef(msg, ..., wrap = FALSE)  warningf(msg, ..., wrap = FALSE)  stopf(msg, ..., wrap = FALSE)"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/printf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Functions for Formatted Output and Conditions — printf","text":"msg (character(1)) Format string passed base::sprintf(). ... () Arguments passed base::sprintf(). file (character(1)) Passed base::cat(). wrap (integer(1) | logical(1)) set positive integer, base::strwrap() used wrap string provided width. set TRUE, width defaults 0.9 * getOption(\"width\"). set FALSE, wrapping disabled (default). wrapping enabled, whitespace characters ([[:space:]]) converted spaces, consecutive spaces converted single space.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/printf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Functions for Formatted Output and Conditions — printf","text":"","code":"messagef(\"   This is a rather long %s   on multiple lines   which will get wrapped. \", \"string\", wrap = 15) #> This is a #> rather long #> string on #> multiple lines #> which will get #> wrapped."},{"path":"https://mlr3misc.mlr-org.com/dev/reference/rcbind.html","id":null,"dir":"Reference","previous_headings":"","what":"Bind Columns by Reference — rcbind","title":"Bind Columns by Reference — rcbind","text":"Performs base::cbind() data.tables, possibly reference.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/rcbind.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bind Columns by Reference — rcbind","text":"","code":"rcbind(x, y)"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/rcbind.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bind Columns by Reference — rcbind","text":"x (data.table::data.table())data.table::data.table() add columns . y (data.table::data.table())data.table::data.table() take columns .","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/rcbind.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bind Columns by Reference — rcbind","text":"(data.table::data.table()): Updated x .","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/rcbind.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bind Columns by Reference — rcbind","text":"","code":"x = data.table::data.table(a = 1:3, b = 3:1) y = data.table::data.table(c = runif(3)) rcbind(x, y) #>    a b         c #> 1: 1 3 0.8917666 #> 2: 2 2 0.1761559 #> 3: 3 1 0.6611401"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/rd_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Helpers to Create Manual Pages — rd_info","title":"Helpers to Create Manual Pages — rd_info","text":"rd_info() internal generic generate Rd markdown code used manual pages. rd_format_string() rd_format_range() string functions assist generating proper Rd code.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/rd_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helpers to Create Manual Pages — rd_info","text":"","code":"rd_info(obj, ...)  rd_format_range(lower, upper)  rd_format_string(str, quote = c(\"\\\\dQuote{\", \"}\"))  rd_format_packages(packages)"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/rd_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helpers to Create Manual Pages — rd_info","text":"obj () Object respective class. ... ()) Additional arguments. lower (numeric(1)) Lower bound. upper (numeric(1)) Upper bound. str (character()) Vector strings. quote (character()) Quotes use around element x. replicated lenght 2. packages (character()) Vector package names.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/rd_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helpers to Create Manual Pages — rd_info","text":"character(), possibly markdown code.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/recycle_vectors.html","id":null,"dir":"Reference","previous_headings":"","what":"Recycle List of Vectors to Common Length — recycle_vectors","title":"Recycle List of Vectors to Common Length — recycle_vectors","text":"Repeats vectors list .x length longest vector using rep() argument length.. operation work length longest vectors integer multiple shorter vectors, throw exception otherwise.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/recycle_vectors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recycle List of Vectors to Common Length — recycle_vectors","text":"","code":"recycle_vectors(.x)"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/recycle_vectors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recycle List of Vectors to Common Length — recycle_vectors","text":".x (list()).","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/recycle_vectors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recycle List of Vectors to Common Length — recycle_vectors","text":"(list()) vectors size.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/recycle_vectors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Recycle List of Vectors to Common Length — recycle_vectors","text":"","code":"recycle_vectors(list(a = 1:3, b = 2)) #> $a #> [1] 1 2 3 #>  #> $b #> [1] 2 2 2 #>"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/register_namespace_callback.html","id":null,"dir":"Reference","previous_headings":"","what":"Registers a Callback on Namespace load/unLoad Events — register_namespace_callback","title":"Registers a Callback on Namespace load/unLoad Events — register_namespace_callback","text":"Register function callback called namespace loaded. Calls callback namespace already loaded also adds unload-hook removes load hook.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/register_namespace_callback.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Registers a Callback on Namespace load/unLoad Events — register_namespace_callback","text":"","code":"register_namespace_callback(pkgname, namespace, callback)"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/register_namespace_callback.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Registers a Callback on Namespace load/unLoad Events — register_namespace_callback","text":"pkgname (character(1)) Name package registers callback. namespace (character(1)) Namespace react . callback (function()) Function call namespace load.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/register_namespace_callback.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Registers a Callback on Namespace load/unLoad Events — register_namespace_callback","text":"NULL.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/reorder_vector.html","id":null,"dir":"Reference","previous_headings":"","what":"Reorder Vector According to Second Vector — reorder_vector","title":"Reorder Vector According to Second Vector — reorder_vector","text":"Returns integer vector order vector x according vector y.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/reorder_vector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reorder Vector According to Second Vector — reorder_vector","text":"","code":"reorder_vector(x, y, na_last = NA)"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/reorder_vector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reorder Vector According to Second Vector — reorder_vector","text":"x (vector()). y (vector()). na_last (logical(1)) values x y? NA: Extra values removed. FALSE: Extra values moved beginning new vector. TRUE: Extra values moved end new vector.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/reorder_vector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reorder Vector According to Second Vector — reorder_vector","text":"(integer()).","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/reorder_vector.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reorder Vector According to Second Vector — reorder_vector","text":"","code":"# x subset of y x = c(\"b\", \"a\", \"c\", \"d\") y = letters x[reorder_vector(x, y)] #> [1] \"a\" \"b\" \"c\" \"d\"  # y subset of x y = letters[1:3] x[reorder_vector(x, y)] #> [1] \"a\" \"b\" \"c\" x[reorder_vector(x, y, na_last = TRUE)] #> [1] \"a\" \"b\" \"c\" \"d\" x[reorder_vector(x, y, na_last = FALSE)] #> [1] \"d\" \"a\" \"b\" \"c\""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/require_namespaces.html","id":null,"dir":"Reference","previous_headings":"","what":"Require Multiple Namespaces — require_namespaces","title":"Require Multiple Namespaces — require_namespaces","text":"Packages loaded (attached) via base::requireNamespace(). least package can loaded, exception class \"packageNotFoundError\" raised. character vector missing packages stored condition packages.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/require_namespaces.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Require Multiple Namespaces — require_namespaces","text":"","code":"require_namespaces(   pkgs,   msg = \"The following packages could not be loaded: %s\",   quietly = FALSE )"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/require_namespaces.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Require Multiple Namespaces — require_namespaces","text":"pkgs (character()) Packages load. msg (character(1)) Message print error. Use \"%s\" placeholder list packages. quietly (logical(1)) TRUE returns TRUE packages loaded, otherwise FALSE.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/require_namespaces.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Require Multiple Namespaces — require_namespaces","text":"(character()) loaded packages (invisibly).","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/require_namespaces.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Require Multiple Namespaces — require_namespaces","text":"","code":"require_namespaces(\"mlr3misc\")  # catch condition, return missing packages tryCatch(require_namespaces(c(\"mlr3misc\", \"foobaaar\")),   packageNotFoundError = function(e) e$packages) #> [1] \"foobaaar\""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/rowwise_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Row-Wise Constructor for 'data.table' — rowwise_table","title":"Row-Wise Constructor for 'data.table' — rowwise_table","text":"Similar tibble function tribble(), function allows construct tabular data row-wise fashion. first arguments passed formula interpreted column names. remaining arguments put resulting table.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/rowwise_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Row-Wise Constructor for 'data.table' — rowwise_table","text":"","code":"rowwise_table(..., .key = NULL)"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/rowwise_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Row-Wise Constructor for 'data.table' — rowwise_table","text":"... () Arguments: Column names first rows formulas (empty left hand side), tabular data following rows. .key (character(1)) NULL, set key via data.table::setkeyv() constructing table.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/rowwise_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Row-Wise Constructor for 'data.table' — rowwise_table","text":"data.table::data.table().","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/rowwise_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Row-Wise Constructor for 'data.table' — rowwise_table","text":"","code":"rowwise_table(   ~a, ~b,   1, \"a\",   2, \"b\" ) #>    a b #> 1: 1 a #> 2: 2 b"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/sequence_helpers.html","id":null,"dir":"Reference","previous_headings":"","what":"Sequence Construction Helpers — sequence_helpers","title":"Sequence Construction Helpers — sequence_helpers","text":"seq_row() creates sequence along number rows x, seq_col() sequence along number columns x. seq_len0() seq_along0() 0-based counterparts base::seq_len() base::seq_along().","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/sequence_helpers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sequence Construction Helpers — sequence_helpers","text":"","code":"seq_row(x)  seq_col(x)  seq_len0(n)  seq_along0(x)"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/sequence_helpers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sequence Construction Helpers — sequence_helpers","text":"x () Arbitrary object. Used query rows, cols length. n (integer(1)) Length sequence.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/sequence_helpers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sequence Construction Helpers — sequence_helpers","text":"","code":"seq_len0(3) #> [1] 0 1 2"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/set_class.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the Class — set_class","title":"Set the Class — set_class","text":"Simple wrapper class(x) = classes.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/set_class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the Class — set_class","text":"","code":"set_class(x, classes)"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/set_class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the Class — set_class","text":"x (). classes (character(1)) Vector new class names.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/set_class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the Class — set_class","text":"Object x, updated class attribute.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/set_class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set the Class — set_class","text":"","code":"set_class(list(), c(\"foo1\", \"foo2\")) #> list() #> attr(,\"class\") #> [1] \"foo1\" \"foo2\""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/set_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Names — set_names","title":"Set Names — set_names","text":"Sets names (colnames) x nm. nm function, used transform already existing names x.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/set_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Names — set_names","text":"","code":"set_names(x, nm = x, ...)  set_col_names(x, nm, ...)"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/set_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Names — set_names","text":"x (.) Object set names . nm (character() | function()) New names, function transforms already existing names. ... () Passed nm nm function.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/set_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set Names — set_names","text":"x updated names.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/set_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set Names — set_names","text":"","code":"x = letters[1:3]  # name x with itself: x = set_names(x) print(x) #>   a   b   c  #> \"a\" \"b\" \"c\"   # convert names to uppercase x = set_names(x, toupper) print(x) #>   A   B   C  #> \"a\" \"b\" \"c\""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/set_params.html","id":null,"dir":"Reference","previous_headings":"","what":"Modify Values of a Parameter Set — set_params","title":"Modify Values of a Parameter Set — set_params","text":"Convenience function modfiy (overwrite) values paradox::ParamSet.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/set_params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modify Values of a Parameter Set — set_params","text":"","code":"set_params(.ps, ..., .values = list(), .insert = TRUE)"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/set_params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Modify Values of a Parameter Set — set_params","text":".ps (paradox::ParamSet) parameter set whose values changed. ... () Named parameter values. .values (list()) Named list parameter values. .insert (logical(1)) Whether insert values (old values kept, overwritten), discard old values. TRUE default.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/set_params.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Modify Values of a Parameter Set — set_params","text":"","code":"param_set = paradox::ps(a = paradox::p_dbl(), b = paradox::p_dbl()) param_set$values$a = 0 set_params(param_set, a = 1, .values = list(b = 2), .insert = TRUE) #> <ParamSet> #>    id    class lower upper nlevels        default value #> 1:  a ParamDbl  -Inf   Inf     Inf <NoDefault[3]>     1 #> 2:  b ParamDbl  -Inf   Inf     Inf <NoDefault[3]>     2 set_params(param_set, a = 3, .insert = FALSE) #> <ParamSet> #>    id    class lower upper nlevels        default value #> 1:  a ParamDbl  -Inf   Inf     Inf <NoDefault[3]>     3 #> 2:  b ParamDbl  -Inf   Inf     Inf <NoDefault[3]>       set_params(param_set, b = 4, .insert = TRUE) #> <ParamSet> #>    id    class lower upper nlevels        default value #> 1:  a ParamDbl  -Inf   Inf     Inf <NoDefault[3]>     3 #> 2:  b ParamDbl  -Inf   Inf     Inf <NoDefault[3]>     4"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/shuffle.html","id":null,"dir":"Reference","previous_headings":"","what":"Safe Version of Sample — shuffle","title":"Safe Version of Sample — shuffle","text":"version sample() treat positive scalar integer x differently. See example.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/shuffle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Safe Version of Sample — shuffle","text":"","code":"shuffle(x, n = length(x), ...)"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/shuffle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Safe Version of Sample — shuffle","text":"x (vector()) Vector sample elements . n (integer()) Number elements sample. ... () Arguments passed base::sample.int().","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/shuffle.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Safe Version of Sample — shuffle","text":"","code":"x = 2:3 sample(x) #> [1] 2 3 shuffle(x) #> [1] 3 2  x = 3 sample(x) #> [1] 2 3 1 shuffle(x) #> [1] 3"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/str_collapse.html","id":null,"dir":"Reference","previous_headings":"","what":"Collapse Strings — str_collapse","title":"Collapse Strings — str_collapse","text":"Collapse multiple strings single string.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/str_collapse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collapse Strings — str_collapse","text":"","code":"str_collapse(str, sep = \", \", quote = character(), n = Inf, ellipsis = \"[...]\")"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/str_collapse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collapse Strings — str_collapse","text":"str (character()) Vector strings. sep (character(1)) String used collapse elements x. quote (character()) Quotes use around element x. replicated lenght 2. n (integer(1)) Number elements keep x. See utils::head(). ellipsis (character(1)) string shortened, signaled appending ellipsis str. Default \" [...]\".","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/str_collapse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Collapse Strings — str_collapse","text":"(character(1)).","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/str_collapse.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Collapse Strings — str_collapse","text":"","code":"str_collapse(letters, quote = \"'\", n = 5) #> [1] \"'a', 'b', 'c', 'd', 'e', [...]\""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/str_indent.html","id":null,"dir":"Reference","previous_headings":"","what":"Indent Strings — str_indent","title":"Indent Strings — str_indent","text":"Formats text block printing.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/str_indent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Indent Strings — str_indent","text":"","code":"str_indent(initial, str, width = 0.9 * getOption(\"width\"), exdent = 2L, ...)"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/str_indent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Indent Strings — str_indent","text":"initial (character(1)) Initial string, passed strwrap(). str (character()) Vector strings. width (integer(1)) Width output. exdent (integer(1)) Indentation subsequent lines paragraph. ... () Additional parameters passed str_collapse().","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/str_indent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Indent Strings — str_indent","text":"(character()).","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/str_indent.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Indent Strings — str_indent","text":"","code":"cat(str_indent(\"Letters:\", str_collapse(letters), width = 25), sep = \"\\n\") #> Letters: a, b, c, d, e, #>   f, g, h, i, j, k, l, #>   m, n, o, p, q, r, s, #>   t, u, v, w, x, y, z"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/str_trunc.html","id":null,"dir":"Reference","previous_headings":"","what":"Truncate Strings — str_trunc","title":"Truncate Strings — str_trunc","text":"str_trunc() truncates string given width.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/str_trunc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Truncate Strings — str_trunc","text":"","code":"str_trunc(str, width = 0.9 * getOption(\"width\"), ellipsis = \"[...]\")"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/str_trunc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Truncate Strings — str_trunc","text":"str (character()) Vector strings. width (integer(1)) Width output. ellipsis (character(1)) string shortened, signaled appending ellipsis str. Default \"[...]\".","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/str_trunc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Truncate Strings — str_trunc","text":"(character()).","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/str_trunc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Truncate Strings — str_trunc","text":"","code":"str_trunc(\"This is a quite long string\", 20) #> [1] \"This is a quite[...]\""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/to_decimal.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a Vector of Bits to a Decimal Number — to_decimal","title":"Convert a Vector of Bits to a Decimal Number — to_decimal","text":"Converts logical vector binary decimal. bit vector may length, last position least significant, .e. bits multiplied 2^(n-1), 2^(n-2), ..., 2^1, 2^0 n length bit vector.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/to_decimal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a Vector of Bits to a Decimal Number — to_decimal","text":"","code":"to_decimal(bits)"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/to_decimal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a Vector of Bits to a Decimal Number — to_decimal","text":"bits (logical()) Logical vector input values. Missing values treated FALSE. bits longer 30 elements, exception raised.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/to_decimal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a Vector of Bits to a Decimal Number — to_decimal","text":"(integer(1)).","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/topo_sort.html","id":null,"dir":"Reference","previous_headings":"","what":"Topological Sorting of Dependency Graphs — topo_sort","title":"Topological Sorting of Dependency Graphs — topo_sort","text":"Topologically sort graph, passed node labels list direct parents node, labels, . node can 'processed' parents 'processed', hence occur previous indices resulting sorting. Returns table, topological row order IDs, entry depth, encodes topological layer, starting 0. nodes depth == 0 ones dependencies, one maximal depth ones nothing else depends .","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/topo_sort.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Topological Sorting of Dependency Graphs — topo_sort","text":"","code":"topo_sort(nodes)"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/topo_sort.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Topological Sorting of Dependency Graphs — topo_sort","text":"nodes (data.table::data.table()) 2 columns: id type character, contains node labels. parents type list character, contains direct parents label id.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/topo_sort.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Topological Sorting of Dependency Graphs — topo_sort","text":"(data.table::data.table()) columns id, depth, sorted topologically IDs.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/topo_sort.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Topological Sorting of Dependency Graphs — topo_sort","text":"","code":"nodes = rowwise_table(   ~id, ~parents,   \"a\", \"b\",   \"b\", \"c\",   \"c\", character() ) topo_sort(nodes) #>    id depth #> 1:  c     0 #> 2:  b     1 #> 3:  a     2"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/transpose_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Transpose lists of lists — transpose_list","title":"Transpose lists of lists — transpose_list","text":"Transposes list list, turns inside , similar function transpose() package purrr.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/transpose_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transpose lists of lists — transpose_list","text":"","code":"transpose_list(.l)"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/transpose_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transpose lists of lists — transpose_list","text":".l (list() list()).","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/transpose_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transpose lists of lists — transpose_list","text":"list().","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/transpose_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transpose lists of lists — transpose_list","text":"","code":"x = list(list(a = 2, b = 3), list(a = 5, b = 10)) str(x) #> List of 2 #>  $ :List of 2 #>   ..$ a: num 2 #>   ..$ b: num 3 #>  $ :List of 2 #>   ..$ a: num 5 #>   ..$ b: num 10 str(transpose_list(x)) #> List of 2 #>  $ a:List of 2 #>   ..$ : num 2 #>   ..$ : num 5 #>  $ b:List of 2 #>   ..$ : num 3 #>   ..$ : num 10  # list of data frame rows: transpose_list(iris[1:2, ]) #> [[1]] #> [[1]]$Sepal.Length #> [1] 5.1 #>  #> [[1]]$Sepal.Width #> [1] 3.5 #>  #> [[1]]$Petal.Length #> [1] 1.4 #>  #> [[1]]$Petal.Width #> [1] 0.2 #>  #> [[1]]$Species #> [1] setosa #> Levels: setosa versicolor virginica #>  #>  #> [[2]] #> [[2]]$Sepal.Length #> [1] 4.9 #>  #> [[2]]$Sepal.Width #> [1] 3 #>  #> [[2]]$Petal.Length #> [1] 1.4 #>  #> [[2]]$Petal.Width #> [1] 0.2 #>  #> [[2]]$Species #> [1] setosa #> Levels: setosa versicolor virginica #>  #>"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/unnest.html","id":null,"dir":"Reference","previous_headings":"","what":"Unnest List Columns — unnest","title":"Unnest List Columns — unnest","text":"Transforms list columns separate columns, possibly reference. original columns removed returned table. non-atomic objects list columns expand new list column.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/unnest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unnest List Columns — unnest","text":"","code":"unnest(x, cols, prefix = NULL)"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/unnest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unnest List Columns — unnest","text":"x (data.table::data.table())data.table::data.table() columns unnest. cols (character()) Column names list columns operate . prefix (logical(1) | character(1)) String prefix new column names . Use \"{col}\" (without quotes) placeholder original column name.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/unnest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Unnest List Columns — unnest","text":"(data.table::data.table()).","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/unnest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Unnest List Columns — unnest","text":"","code":"x = data.table::data.table(   id = 1:2,   value = list(list(a = 1, b = 2), list(a = 2, b = 2)) ) print(x) #>    id     value #> 1:  1 <list[2]> #> 2:  2 <list[2]> unnest(data.table::copy(x), \"value\") #>    id a b #> 1:  1 1 2 #> 2:  2 2 2 unnest(data.table::copy(x), \"value\", prefix = \"{col}.\") #>    id value.a value.b #> 1:  1       1       2 #> 2:  2       2       2"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/which_min.html","id":null,"dir":"Reference","previous_headings":"","what":"Index of the Minimum/Maximum Value, with Correction for Ties — which_min","title":"Index of the Minimum/Maximum Value, with Correction for Ties — which_min","text":"Works similar base::.min()/base::.max(), corrects ties. Missing values treated Inf which_min -Inf which_max().","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/which_min.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Index of the Minimum/Maximum Value, with Correction for Ties — which_min","text":"","code":"which_min(x, ties_method = \"random\", na_rm = FALSE)  which_max(x, ties_method = \"random\", na_rm = FALSE)"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/which_min.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Index of the Minimum/Maximum Value, with Correction for Ties — which_min","text":"x (numeric()) Numeric vector. ties_method (character(1)) Handling ties. One \"first\", \"last\" \"random\" (default) return first index, last index, random index minimum/maximum values. na_rm (logical(1)) Remove NAs computation?","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/which_min.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Index of the Minimum/Maximum Value, with Correction for Ties — which_min","text":"(integer()): Index minimum/maximum value. Returns empty integer vector empty input vectors vectors non-missing values (na_rm TRUE). Returns NA na_rm FALSE least one NA found x.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/which_min.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Index of the Minimum/Maximum Value, with Correction for Ties — which_min","text":"","code":"x = c(2, 3, 1, 3, 5, 1, 1) which_min(x, ties_method = \"first\") #> [1] 3 which_min(x, ties_method = \"last\") #> [1] 7 which_min(x, ties_method = \"random\") #> [1] 7  which_max(x) #> [1] 5 which_max(integer(0)) #> integer(0) which_max(NA) #> [1] NA which_max(c(NA, 1)) #> [1] NA"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/with_package.html","id":null,"dir":"Reference","previous_headings":"","what":"Execture code with a modified search path — with_package","title":"Execture code with a modified search path — with_package","text":"Attaches package search path (already attached), executes code eventually removes package search path , restoring previous state. Note function deprecated favor (now fixed) version withr.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/with_package.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Execture code with a modified search path — with_package","text":"","code":"with_package(package, code, ...)"},{"path":"https://mlr3misc.mlr-org.com/dev/reference/with_package.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Execture code with a modified search path — with_package","text":"package (character(1)) Name package attach. code (expression) Code run. ... () Additional arguments passed library().","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/reference/with_package.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Execture code with a modified search path — with_package","text":"Result evaluation code.","code":""},{"path":[]},{"path":"https://mlr3misc.mlr-org.com/dev/news/index.html","id":"mlr3misc-0100","dir":"Changelog","previous_headings":"","what":"mlr3misc 0.10.0","title":"mlr3misc 0.10.0","text":"CRAN release: 2022-01-11 Added helper get_private(). Added helper map_br() map_bc(). Added helper recycle_vectors(). Added helpers walk(), iwalk() pwalk().","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/news/index.html","id":"mlr3misc-095","dir":"Changelog","previous_headings":"","what":"mlr3misc 0.9.5","title":"mlr3misc 0.9.5","text":"CRAN release: 2021-11-16 Added helper deframe().","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/news/index.html","id":"mlr3misc-094","dir":"Changelog","previous_headings":"","what":"mlr3misc 0.9.4","title":"mlr3misc 0.9.4","text":"CRAN release: 2021-09-08 Added helper capitalize(). Added helper to_decimal(). Fixed cleanup register_namespace_callback().","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/news/index.html","id":"mlr3misc-093","dir":"Changelog","previous_headings":"","what":"mlr3misc 0.9.3","title":"mlr3misc 0.9.3","text":"CRAN release: 2021-07-14 New (internal) helper functions: calculate_hash() assert_ro_binding()","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/news/index.html","id":"mlr3misc-092","dir":"Changelog","previous_headings":"","what":"mlr3misc 0.9.2","title":"mlr3misc 0.9.2","text":"CRAN release: 2021-06-29 R6 objects retrieved dictionary now properly cloned.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/news/index.html","id":"mlr3misc-091","dir":"Changelog","previous_headings":"","what":"mlr3misc 0.9.1","title":"mlr3misc 0.9.1","text":"CRAN release: 2021-04-28 Fixed compilation R versions older 3.5.0 (#59).","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/news/index.html","id":"mlr3misc-090","dir":"Changelog","previous_headings":"","what":"mlr3misc 0.9.0","title":"mlr3misc 0.9.0","text":"CRAN release: 2021-04-12 Changed return type reorder_vector(). Added assertions pmap() avoid segfault (#56). Added count_missing().","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/news/index.html","id":"mlr3misc-080","dir":"Changelog","previous_headings":"","what":"mlr3misc 0.8.0","title":"mlr3misc 0.8.0","text":"CRAN release: 2021-03-19 New function reorder_vector(). formulate() can now quote terms, defaulting quote terms right hand side.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/news/index.html","id":"mlr3misc-070","dir":"Changelog","previous_headings":"","what":"mlr3misc 0.7.0","title":"mlr3misc 0.7.0","text":"CRAN release: 2021-01-05 Make map functions work nicely data frames data tables. formulate() now supports multiple LHS terms. Added format_bib() cite_bib() helpers working bibentires roxygen2.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/news/index.html","id":"mlr3misc-060","dir":"Changelog","previous_headings":"","what":"mlr3misc 0.6.0","title":"mlr3misc 0.6.0","text":"CRAN release: 2020-11-17 New argument .timeout invoke(). New argument .timeout encapsulate(). Removed cite_bib() Rd macro \\cite{} removed orphaned package bibtex suggests. New argument quietly require_namespaces(). New function crate() cleanly separate function environment. New function register_namespace_callback().","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/news/index.html","id":"mlr3misc-050","dir":"Changelog","previous_headings":"","what":"mlr3misc 0.5.0","title":"mlr3misc 0.5.0","text":"CRAN release: 2020-08-13 Added compose() function function composition. Added method leanify_package() shrinks size serialized R6 objects.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/news/index.html","id":"mlr3misc-040","dir":"Changelog","previous_headings":"","what":"mlr3misc 0.4.0","title":"mlr3misc 0.4.0","text":"CRAN release: 2020-07-17 Added helper functions assist generating Rd documentation ‘mlr3’ objects.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/news/index.html","id":"mlr3misc-030","dir":"Changelog","previous_headings":"","what":"mlr3misc 0.3.0","title":"mlr3misc 0.3.0","text":"CRAN release: 2020-06-03 Introduced placeholder column name prefixes unnest().","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/news/index.html","id":"mlr3misc-020","dir":"Changelog","previous_headings":"","what":"mlr3misc 0.2.0","title":"mlr3misc 0.2.0","text":"CRAN release: 2020-04-15 Fixed issue rcbind() columns x named y (#42). Fixed broken .exit() invoke() seed list options provided.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/news/index.html","id":"mlr3misc-018","dir":"Changelog","previous_headings":"","what":"mlr3misc 0.1.8","title":"mlr3misc 0.1.8","text":"CRAN release: 2020-02-21 New function check_packages_installed(). New function open_help().","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/news/index.html","id":"mlr3misc-017","dir":"Changelog","previous_headings":"","what":"mlr3misc 0.1.7","title":"mlr3misc 0.1.7","text":"CRAN release: 2020-01-28 map_dtr(), imap_dtr() pmap_dtr() now pass .idcol argument idcol data.table::rbindlist(). cite_bib() can now handle packages multiple citation entries. Added argument wrap catf(), messagef(), warningf() stopf() wrap respective messages customizable width. Added with_package() helper, similar one package withr.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/news/index.html","id":"mlr3misc-016","dir":"Changelog","previous_headings":"","what":"mlr3misc 0.1.6","title":"mlr3misc 0.1.6","text":"CRAN release: 2019-12-12 cite_bib() Rd macro \\cite{} can now return citation information package key set \"pkg::citation\". Updated dictionary helpers.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/news/index.html","id":"mlr3misc-015","dir":"Changelog","previous_headings":"","what":"mlr3misc 0.1.5","title":"mlr3misc 0.1.5","text":"CRAN release: 2019-09-28 Fixed error C code discovered UBSAN checks CRAN. Added dictionary_sugar_mget(). Renamed dictionary_sugar() dictionary_sugar_get(). Added function cite_bib() Rd macro \\cite{} insert entries bibtex files roxygen documentation. unnest() now creates list columns non atomic list elements.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/news/index.html","id":"mlr3misc-014","dir":"Changelog","previous_headings":"","what":"mlr3misc 0.1.4","title":"mlr3misc 0.1.4","text":"CRAN release: 2019-09-17 Added argument na_rm which_max() which_min(). Fixed bug as_short_string() empty atomic vectors.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/news/index.html","id":"mlr3misc-013","dir":"Changelog","previous_headings":"","what":"mlr3misc 0.1.3","title":"mlr3misc 0.1.3","text":"CRAN release: 2019-08-22 New function detect(). New function dictionary_sugar(). now asserted return value Dictionary$get() R6 object. Fix assertions Dictionary","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/news/index.html","id":"mlr3misc-012","dir":"Changelog","previous_headings":"","what":"mlr3misc 0.1.2","title":"mlr3misc 0.1.2","text":"CRAN release: 2019-08-07 New function named_vector(). New function keep_in_bounds(). New function set_col_names(). New function distinct_values(). Added argument .key rowwise_table(). Additional arguments passed Dictionary$get() Dictionary$mget() must now named.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/news/index.html","id":"mlr3misc-011","dir":"Changelog","previous_headings":"","what":"mlr3misc 0.1.1","title":"mlr3misc 0.1.1","text":"CRAN release: 2019-07-23 New function encapsulate() call functions recording log. invoke(): New arguments .opts .seed temporarily set options random seeds, respectively. Fixed warnings partial argument matching.","code":""},{"path":"https://mlr3misc.mlr-org.com/dev/news/index.html","id":"mlr3misc-010","dir":"Changelog","previous_headings":"","what":"mlr3misc 0.1.0","title":"mlr3misc 0.1.0","text":"CRAN release: 2019-07-10 Initial release.","code":""}]
